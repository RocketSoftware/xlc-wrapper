* Copied from /usr/lpp/cbclib/xlc/etc/xlc.cfg, with two lines added.
* The third and fourth lines after "DEFLT:" are new.
*
* FUNCTION: z/OS 2.1 XL C/C++ Compiler Configuration file
*
* Licensed Materials - Property of IBM
* 5694-A01, 5650-ZOS Copyright IBM Corp. 2004, 2012
* All Rights Reserved
* US Government Users Restricted Rights - Use, duplication or
* disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
*
* C compiler, extended mode
xlc:      use               = CDEFLT

* XPLINK C compiler, extended mode
xlc_x:    use               = CDEFLT

* 64 bit C compiler, extended mode
xlc_64:   use               = CDEFLT

* C compiler, common usage C
cc:       use               = CDEFLT

* XPLINK C compiler, common usage C
cc_x:     use               = CDEFLT

* 64 bit C compiler, common usage C
cc_64:    use               = CDEFLT

* Strict ANSI C 89 compiler
c89:      use               = CDEFLT

* XPLINK Strict ANSI C 89 compiler
c89_x:    use               = CDEFLT

* 64 bit Strict ANSI C 89 compiler
c89_64:   use               = CDEFLT

* ISO/IEC 9899:1999 Standard Compliant C Compiler
c99:      use               = CDEFLT

* XPLINK ISO/IEC 9899:1999 Standard Compliant C Compiler
c99_x:    use               = CDEFLT

* 64 bit ISO/IEC 9899:1999 Standard Compliant C Compiler
c99_64:   use               = CDEFLT

* ANSI C++ compiler
cxx:      use               = CXXDEFLT
          xlC               = /usr/lpp/cbclib/xlc/bin/.orig/xlC
          ipa               = /bin/cxx

* XPLINK ANSI C++ compiler
cxx_x:    use               = CXXDEFLT
          xlC               = /usr/lpp/cbclib/xlc/bin/.orig/xlC
          ipa               = /bin/cxx

* 64 bit ANSI C++ compiler
cxx_64:   use               = CXXDEFLT
          xlC               = /usr/lpp/cbclib/xlc/bin/.orig/xlC
          ipa               = /bin/cxx

* ANSI C++ compiler
c++:      use               = CXXDEFLT
          xlC               = /usr/lpp/cbclib/xlc/bin/.orig/xlC
          ipa               = /bin/cxx

* XPLINK ANSI C++ compiler
c++_x:    use               = CXXDEFLT
          xlC               = /usr/lpp/cbclib/xlc/bin/.orig/xlC
          ipa               = /bin/cxx

* 64 bit ANSI C++ compiler
c++_64:   use               = CXXDEFLT
          xlC               = /usr/lpp/cbclib/xlc/bin/.orig/xlC
          ipa               = /bin/cxx

* C++ compiler, extended mode
xlC:      use               = CXXDEFLT
          xlC               = /usr/lpp/cbclib/xlc/bin/.orig/xlC
          ipa               = /bin/cxx

* XPLINK C++ compiler, extended mode
xlC_x:    use               = CXXDEFLT
          xlC               = /usr/lpp/cbclib/xlc/bin/.orig/xlC
          ipa               = /bin/cxx

* 64 bit C++ compiler, extended mode
xlC_64:   use               = CXXDEFLT
          xlC               = /usr/lpp/cbclib/xlc/bin/.orig/xlC
          ipa               = /bin/cxx

* C++ compiler, extended mode
xlc++:    use               = CXXDEFLT
          xlC               = /usr/lpp/cbclib/xlc/bin/.orig/xlC
          ipa               = /bin/cxx

* XPLINK C++ compiler, extended mode
xlc++_x:  use               = CXXDEFLT
          xlC               = /usr/lpp/cbclib/xlc/bin/.orig/xlC
          ipa               = /bin/cxx

* 64 bit C++ compiler, extended mode
xlc++_64: use               = CXXDEFLT
          xlC               = /usr/lpp/cbclib/xlc/bin/.orig/xlC
          ipa               = /bin/cxx

* Clang C compiler
clang:        use               = CDEFLT
              options           = -qnosearch,-qnocsect
              cinc              = -isystem/rsusr/cnj/njsc/include/le
              cppcomp           = /rsusr/cnj/njsc/exe/cnjdrvr
              ccomp             = /rsusr/cnj/njsc/exe/cnjdrvr
              steplib           = VENDOR.CNJV6.SCNJCMP

* Clang C++ compiler
clang++:      use               = CXXDEFLT
              options           = -D_XOPEN_SOURCE=600,-D_UNIX03_WITHDRAWN,-D__static_assert=static_assert,-qnosearch,-qnocsect,-Wno-parentheses,-Wno-unused-value
              cinc              = -isystem/rsusr/cnj/njsc/include/le
              cppinc            = -isystem/rsusr/cnj/njsc/include/c++,-isystem/rsusr/cnj/njsc/include/le
              libraries         = -L/rsusr/cnj/njsc/lib,-lc++
              cppcomp           = /rsusr/cnj/njsc/exe/cnjdrvr
              ccomp             = /rsusr/cnj/njsc/exe/cnjdrvr
              steplib           = VENDOR.CNJV6.SCNJCMP

* common definitions
CDEFLT:   cppcomp           = /usr/lpp/cbclib/xlc/exe/ccndrvr
          ccomp             = /usr/lpp/cbclib/xlc/exe/ccndrvr
          cinc              = -I/usr/include
          options           = -qnosearch -qseverity=e=CCN3296 -qseverity=e=CCN3950
          ipacomp           = /usr/lpp/cbclib/xlc/exe/ccndrvr
          ipa               = /bin/c89
          as                = /bin/c89
          ld_c              = /bin/c89
          ld_cpp            = /bin/cxx
          xlC               = /usr/lpp/cbclib/xlc/bin/xlc
          xlCcopt           = -D_XOPEN_SOURCE
          sysobj            = cee.sceeobj:cee.sceecpp
          syslib            = cee.sceelkex:cee.sceelked:cbc.sccnobj:sys1.csslib
          syslib_x          = cee.sceebnd2:cbc.sccnobj:sys1.csslib
          exportlist_c      = NONE
          exportlist_cpp    = cee.sceelib(c128n):cbc.sclbsid(iostream,complex)
          exportlist_c_x    = cee.sceelib(celhs003,celhs001)
          exportlist_cpp_x  = cee.sceelib(celhs003,celhs001,celhscpp,c128):cbc.sclbsid(iostream,complex)
*         exportlist_c_64   = cee.sceelib(celqs003)
          exportlist_c_64   = cee.sceelib(celqs003,celqs001,celqscpp,c64):cbc.sclbsid(iosx64)
          exportlist_cpp_64 = cee.sceelib(celqs003,celqs001,celqscpp,c64):cbc.sclbsid(iosx64)
          steplib           = NONE

* common definitions
CXXDEFLT: cppcomp           = /usr/lpp/cbclib/xlc/exe/ccndrvr
          ccomp             = /usr/lpp/cbclib/xlc/exe/ccndrvr
          cinc              = -I/usr/include
          options           = -qnosearch -qhalton=3296:3950
          ipacomp           = /usr/lpp/cbclib/xlc/exe/ccndrvr
          ipa               = /bin/c89
          as                = /bin/c89
          ld_c              = /bin/c89
          ld_cpp            = /bin/cxx
          xlC               = /usr/lpp/cbclib/xlc/bin/xlc
          xlCcopt           = -D_XOPEN_SOURCE
          sysobj            = cee.sceeobj:cee.sceecpp
          syslib            = cee.sceelkex:cee.sceelked:cbc.sccnobj:sys1.csslib
          syslib_x          = cee.sceebnd2:cbc.sccnobj:sys1.csslib
          exportlist_c      = NONE
          exportlist_cpp    = cee.sceelib(c128n):cbc.sclbsid(iostream,complex)
          exportlist_c_x    = cee.sceelib(celhs003,celhs001)
          exportlist_cpp_x  = cee.sceelib(celhs003,celhs001,celhscpp,c128):cbc.sclbsid(iostream,complex)
*         exportlist_c_64   = cee.sceelib(celqs003)
          exportlist_c_64   = cee.sceelib(celqs003,celqs001,celqscpp,c64):cbc.sclbsid(iosx64)
          exportlist_cpp_64 = cee.sceelib(celqs003,celqs001,celqscpp,c64):cbc.sclbsid(iosx64)
          steplib           = NONE
